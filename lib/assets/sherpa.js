// Generated by CoffeeScript 1.3.3
(function() {
  var Sherpa,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Sherpa = (function() {

    function Sherpa() {
      this.usageToggle = __bind(this.usageToggle, this);

      this.disableAnchors = __bind(this.disableAnchors, this);

      this.activateSubnav = __bind(this.activateSubnav, this);
      this.initialize();
    }

    Sherpa.prototype.initialize = function() {
      this.domLookup();
      this.addListeners();
      this.activateMain();
      return this.activateUsages();
    };

    Sherpa.prototype.domLookup = function() {
      this.subnav_lists = $('.sherpa-anchor-nav li');
      this.subnav_links = $('.sherpa-anchor-nav a');
      this.usages = $('.sherpa-usage > h4');
      return this.anchor_links = $('.sherpa-wrapper [href=#]');
    };

    Sherpa.prototype.addListeners = function() {
      this.subnav_links.on('click', this.activateSubnav);
      this.anchor_links.on('click', this.disableAnchors);
      return this.usages.on('click', this.usageToggle);
    };

    Sherpa.prototype.activateMain = function() {
      var active, item, link, main_nav, text, _i, _len, _results;
      active = $('body').attr('id');
      main_nav = $('.sherpa-dox-nav li a');
      _results = [];
      for (_i = 0, _len = main_nav.length; _i < _len; _i++) {
        item = main_nav[_i];
        link = $(item);
        text = link.html().toLowerCase();
        if (text === active) {
          _results.push(link.parent('li').addClass('active'));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Sherpa.prototype.activateSubnav = function(e) {
      this.subnav_lists.removeClass('active');
      return $(e.target).parent('li').addClass('active');
    };

    Sherpa.prototype.disableAnchors = function(e) {
      return e.preventDefault();
    };

    Sherpa.prototype.getPreTag = function(el) {
      return el.parent('.sherpa-usage').find('pre').first();
    };

    Sherpa.prototype.activateUsages = function() {
      this.usages.addClass('sherpa-togglable');
      this.usages.prepend("Hide ");
      return this.usages.trigger('click');
    };

    Sherpa.prototype.usageToggle = function(e) {
      var el, pre;
      el = $(e.target);
      pre = this.getPreTag(el);
      if (pre.hasClass('sherpa-hidden')) {
        return this.usageShow(el, pre);
      } else {
        return this.usageHide(el, pre);
      }
    };

    Sherpa.prototype.usageShow = function(el, pre) {
      var text;
      text = el.html();
      el.html(text.replace(/^View/, "Hide"));
      return pre.removeClass('sherpa-hidden');
    };

    Sherpa.prototype.usageHide = function(el, pre) {
      var text;
      text = el.html();
      el.html(text.replace(/^Hide/, "View"));
      return pre.addClass('sherpa-hidden');
    };

    return Sherpa;

  })();

  new Sherpa();

}).call(this);
